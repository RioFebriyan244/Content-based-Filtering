# Laporan Proyek Machine Learning - Rio Febriyan

## Domain Proyek

Sistem rekomendasi sangat krusial di industri e-commerce karena dapat meningkatkan penjualan dan kepuasan pelanggan. Dalam proyek ini, kami membangun sistem rekomendasi berbasis content-based filtering pada produk fashion. Sistem ini merekomendasikan produk yang mirip berdasarkan atribut konten seperti nama produk, harga, ukuran, rating, dan target gender.

### Business Understanding

# Problem Statements
- Bagaimana membangun sistem rekomendasi produk fashion yang mampu memberikan saran berdasarkan kemiripan atribut produk?
- Bagaimana cara memanfaatkan model deep learning untuk memahami representasi produk dan melakukan klasifikasi?
- Bagaimana mengevaluasi performa dari sistem rekomendasi yang dibangun ?

### Goals
- Menghasilkan sistem rekomendasi produk berbasis content-based filtering.
- Melatih model klasifikasi neural network menggunakan TensorFlow.
- Memvisualisasikan embedding produk dan mengevaluasi model berdasarkan metrik klasifikasi dan efektivitas rekomendasi.

### Solution statements
    - Melakukan preprocessing teks, kategorikal, dan numerik menjadi vektor numerik.
    - Menggunakan arsitektur TensorFlow (Functional API) untuk klasifikasi dan pembentukan embedding.
    - Menggunakan cosine similarity dari embedding gabungan untuk sistem rekomendasi.

## Data Understanding
Dataset terdiri dari 867 produk fashion dengan fitur:
- Title: Nama produk
- Price: Harga dalam satuan rupiah
- Rating: Skor ulasan pengguna
- Colors: Jumlah variasi warna
- Size: Ukuran produk (S, M, L, XL, dst)
- Gender: Target pengguna (Men, Women, Unisex)
Data ini tidak memiliki nilai kosong atau duplikat. Visualisasi sederhana menunjukkan distribusi rating dan gender yang cukup beragam.
data ini di peroleh dari crawling pada suatu website dicoding berikut link Url nya : https://fashion-studio.dicoding.dev


### Variabel-variabel pada products dataset adalah sebagai berikut:
- Title : Jenis barang / nama barang.
- Price : Harga barang dalam Rupiah.
- Rating : Reting suatu barang
- Colors : varian warna barang tersebut
- Size : Ukuran Barang
- Gender : Peruntukan barang bisa di pakai oleh laki-laki , Perumpuan ayau keduanya bisa

## Data Preparation
- TF-IDF untuk Title
- One-Hot Encoding untuk Size dan Gender
- Normalisasi Price, Rating, dan Colors dengan MinMaxScaler
- Penggabungan seluruh fitur menjadi feature_matrix
- Split data menjadi training dan testing dengan rasio 80:20

## Modeling
Model klasifikasi menggunakan TensorFlow Functional API:
- Input layer: sejumlah dimensi fitur
- Hidden layers: Dense(128) → ReLU → Dense(64) → ReLU
- Output layer: Dense jumlah kelas Gender → Softmax
- Loss function: sparse_categorical_crossentropy
- Optimizer: Adam
- Epoch: 10, Batch size: 32
Hasil dari hidden layer (Dense 64) digunakan sebagai embedding produk untuk visualisasi dan sistem rekomendasi.

## Evaluation

1. Evaluasi Model Klasifikasi
- Model klasifikasi dibangun menggunakan TensorFlow untuk memprediksi nilai Gender berdasarkan fitur produk. Metrik evaluasi yang digunakan:
. Accuracy
Persentase prediksi yang benar dari total prediksi
. Precision
Seberapa banyak prediksi positif yang benar. Berguna saat false positives penting untuk dihindari
. Recall
Seberapa banyak data positif yang berhasil teridentifikasi. Penting ketika kita ingin menangkap sebanyak mungkin kasus positif
. F1 Score
Harmonik rata-rata antara precision dan recall. Cocok ketika perlu keseimbangan antara precision dan recall

2.Evaluasi Visualisasi
- Line Chart:
Visualisasi akurasi dan loss selama proses training dan validasi pada setiap epoch. Ini membantu memantau stabilitas dan overfitting model.


3. Hasil Evaluasi Model 
- Akurasi Model: Model mencapai akurasi sekitar 100%, menunjukkan performa yang baik dalam memprediksi target Gender
- Classification Report: Hasil menunjukkan precision dan recall yang seimbang di antara ketiga kategori, yang mengindikasikan model tidak berat sebelah terhadap salah satu label
**Contoh code evaluasi :
loss, accuracy = model.evaluate(X_test.toarray(), y_test_encoded)
print("Akurasi Model: {:.2f}%".format(accuracy * 100))

Output :
Akurasi Model : 100%

- Visualisasi Akurasi dan Loss :
. Grafik garis menunjukkan akurasi yang meningkat stabil dan loss yang menurun konsisten di setiap epoch
. Tidak ada tanda overfitting karena kurva training dan validasi cukup paralel dan stabil

4. Interpretasi Visualisasi
- Akurasi meningkat stabil seiring bertambahnya epoch
- Loss menurun secara konsisten, baik pada data latih maupun validasi
- Tidak terdapat indikasi overfitting, karena kurva training dan validation cukup berdekatan


### Kesimpulan Evaluasi 
- Model klasifikasi telah menunjukkan performa yang sangat baik
- Visualisasi pelatihan membantu memverifikasi stabilitas proses training.
- Sistem rekomendasi berbasis cosine similarity dan filtering rating berhasil memberikan rekomendasi yang relevan.
- Cosine similarity dan embedding yang digunakan berhasil membentuk dasar sistem rekomendasi yang bisa diandalkan

